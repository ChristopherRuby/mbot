#!/bin/bash
# Script de gestion EC2 pour le chatbot MongoDB Movies

# Configuration - REMPLACEZ PAR VOS VALEURS
INSTANCE_ID="i-1234567890abcdef0"  # Votre Instance ID
INSTANCE_NAME="mbot-chatbot"

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher l'√©tat de l'instance
check_status() {
    echo -e "${BLUE}üîç V√©rification de l'√©tat de l'instance...${NC}"
    
    STATUS=$(aws ec2 describe-instances \
        --instance-ids $INSTANCE_ID \
        --query 'Reservations[0].Instances[0].State.Name' \
        --output text 2>/dev/null)
    
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå Erreur: Impossible de r√©cup√©rer l'√©tat de l'instance${NC}"
        echo "V√©rifiez votre INSTANCE_ID et configuration AWS CLI"
        exit 1
    fi
    
    PUBLIC_IP=$(aws ec2 describe-instances \
        --instance-ids $INSTANCE_ID \
        --query 'Reservations[0].Instances[0].PublicIpAddress' \
        --output text 2>/dev/null)
    
    echo -e "${BLUE}üìä Instance: ${INSTANCE_NAME} (${INSTANCE_ID})${NC}"
    echo -e "${BLUE}üìç √âtat: ${STATUS}${NC}"
    
    if [ "$STATUS" = "running" ] && [ "$PUBLIC_IP" != "None" ]; then
        echo -e "${GREEN}üåê IP Publique: ${PUBLIC_IP}${NC}"
        echo -e "${GREEN}üé¨ Application: http://${PUBLIC_IP}${NC}"
    elif [ "$STATUS" = "running" ]; then
        echo -e "${YELLOW}‚è≥ Instance en d√©marrage... IP pas encore assign√©e${NC}"
    fi
}

# Fonction pour arr√™ter l'instance
stop_instance() {
    echo -e "${YELLOW}üõë Arr√™t de l'instance EC2...${NC}"
    
    aws ec2 stop-instances --instance-ids $INSTANCE_ID >/dev/null
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Commande d'arr√™t envoy√©e avec succ√®s${NC}"
        echo -e "${BLUE}‚è≥ Attente de l'arr√™t complet...${NC}"
        
        # Attendre que l'instance soit compl√®tement arr√™t√©e
        aws ec2 wait instance-stopped --instance-ids $INSTANCE_ID
        echo -e "${GREEN}‚úÖ Instance arr√™t√©e avec succ√®s${NC}"
        echo -e "${YELLOW}üí∞ Facturation arr√™t√©e (seul le stockage EBS reste factur√©)${NC}"
    else
        echo -e "${RED}‚ùå Erreur lors de l'arr√™t de l'instance${NC}"
    fi
}

# Fonction pour d√©marrer l'instance
start_instance() {
    echo -e "${GREEN}üöÄ D√©marrage de l'instance EC2...${NC}"
    
    aws ec2 start-instances --instance-ids $INSTANCE_ID >/dev/null
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Commande de d√©marrage envoy√©e avec succ√®s${NC}"
        echo -e "${BLUE}‚è≥ Attente du d√©marrage complet...${NC}"
        
        # Attendre que l'instance soit compl√®tement d√©marr√©e
        aws ec2 wait instance-running --instance-ids $INSTANCE_ID
        
        # R√©cup√©rer la nouvelle IP
        NEW_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query 'Reservations[0].Instances[0].PublicIpAddress' \
            --output text)
        
        echo -e "${GREEN}‚úÖ Instance d√©marr√©e avec succ√®s${NC}"
        echo -e "${GREEN}üåê Nouvelle IP publique: ${NEW_IP}${NC}"
        echo -e "${GREEN}üé¨ Application disponible sur: http://${NEW_IP}${NC}"
        echo -e "${BLUE}‚è≥ Attendez ~2-3 minutes que tous les services d√©marrent${NC}"
    else
        echo -e "${RED}‚ùå Erreur lors du d√©marrage de l'instance${NC}"
    fi
}

# Fonction pour red√©marrer l'instance
restart_instance() {
    echo -e "${YELLOW}üîÑ Red√©marrage de l'instance EC2...${NC}"
    stop_instance
    echo -e "${BLUE}‚è≥ Attente de 10 secondes...${NC}"
    sleep 10
    start_instance
}

# Menu principal
show_menu() {
    echo -e "${BLUE}================================${NC}"
    echo -e "${BLUE}üé¨ Gestionnaire EC2 - Chatbot MongoDB Movies${NC}"
    echo -e "${BLUE}================================${NC}"
    echo ""
    echo "1) üîç V√©rifier l'√©tat"
    echo "2) üöÄ D√©marrer l'instance"
    echo "3) üõë Arr√™ter l'instance"
    echo "4) üîÑ Red√©marrer l'instance"
    echo "5) üìä Co√ªts estim√©s"
    echo "0) ‚ùå Quitter"
    echo ""
}

# Fonction d'estimation des co√ªts
show_costs() {
    echo -e "${BLUE}üí∞ Estimation des Co√ªts EC2 t3.small${NC}"
    echo "=================================="
    echo "Instance en marche: ~$0.0208/heure"
    echo "Instance arr√™t√©e: $0.00/heure"
    echo "Stockage EBS (20GB): ~$2/mois"
    echo ""
    echo "üìä √âconomies par arr√™t:"
    echo "‚Ä¢ 1 jour arr√™t√©e: ~$0.50 √©conomis√©"  
    echo "‚Ä¢ 1 semaine arr√™t√©e: ~$3.50 √©conomis√©"
    echo "‚Ä¢ Nuits (8h/jour): ~$5/mois √©conomis√©"
    echo ""
}

# Configuration initiale
if [ "$INSTANCE_ID" = "i-1234567890abcdef0" ]; then
    echo -e "${RED}‚ö†Ô∏è  CONFIGURATION REQUISE${NC}"
    echo "Veuillez modifier ce script et remplacer:"
    echo "INSTANCE_ID par votre vrai Instance ID"
    echo ""
    echo "Pour trouver votre Instance ID:"
    echo "aws ec2 describe-instances --query 'Reservations[*].Instances[*].[InstanceId,Tags[?Key==\`Name\`].Value|[0],State.Name]' --output table"
    exit 1
fi

# V√©rifier AWS CLI
if ! command -v aws &> /dev/null; then
    echo -e "${RED}‚ùå AWS CLI non trouv√©${NC}"
    echo "Installez AWS CLI et configurez vos credentials"
    exit 1
fi

# Boucle du menu principal
while true; do
    show_menu
    read -p "Choisissez une option: " choice
    echo ""
    
    case $choice in
        1) check_status ;;
        2) start_instance ;;
        3) stop_instance ;;
        4) restart_instance ;;
        5) show_costs ;;
        0) echo -e "${GREEN}üëã Au revoir !${NC}"; exit 0 ;;
        *) echo -e "${RED}‚ùå Option invalide${NC}" ;;
    esac
    
    echo ""
    read -p "Appuyez sur Entr√©e pour continuer..."
    echo ""
done